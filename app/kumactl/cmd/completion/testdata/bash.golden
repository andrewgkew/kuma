# bash completion V2 for kumactl                              -*- shell-script -*-

__kumactl_debug()
{
    if [[ -n ${BASH_COMP_DEBUG_FILE:-} ]]; then
        echo "$*" >> "${BASH_COMP_DEBUG_FILE}"
    fi
}

# Macs have bash3 for which the bash-completion package doesn't include
# _init_completion. This is a minimal version of that function.
__kumactl_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

# This function calls the kumactl program to obtain the completion
# results and the directive.  It fills the 'out' and 'directive' vars.
__kumactl_get_completion_results() {
    local requestComp lastParam lastChar args

    # Prepare the command to request completions for the program.
    # Calling ${words[0]} instead of directly kumactl allows to handle aliases
    args=("${words[@]:1}")
    requestComp="${words[0]} __complete ${args[*]}"

    lastParam=${words[$((${#words[@]}-1))]}
    lastChar=${lastParam:$((${#lastParam}-1)):1}
    __kumactl_debug "lastParam ${lastParam}, lastChar ${lastChar}"

    if [ -z "${cur}" ] && [ "${lastChar}" != "=" ]; then
        # If the last parameter is complete (there is a space following it)
        # We add an extra empty parameter so we can indicate this to the go method.
        __kumactl_debug "Adding extra empty parameter"
        requestComp="${requestComp} ''"
    fi

    # When completing a flag with an = (e.g., kumactl -n=<TAB>)
    # bash focuses on the part after the =, so we need to remove
    # the flag part from $cur
    if [[ "${cur}" == -*=* ]]; then
        cur="${cur#*=}"
    fi

    __kumactl_debug "Calling ${requestComp}"
    # Use eval to handle any environment variables and such
    out=$(eval "${requestComp}" 2>/dev/null)

    # Extract the directive integer at the very end of the output following a colon (:)
    directive=${out##*:}
    # Remove the directive
    out=${out%:*}
    if [ "${directive}" = "${out}" ]; then
        # There is not directive specified
        directive=0
    fi
    __kumactl_debug "The completion directive is: ${directive}"
    __kumactl_debug "The completions are: ${out[*]}"
}

__kumactl_process_completion_results() {
    local shellCompDirectiveError=1
    local shellCompDirectiveNoSpace=2
    local shellCompDirectiveNoFileComp=4
    local shellCompDirectiveFilterFileExt=8
    local shellCompDirectiveFilterDirs=16

    if [ $((directive & shellCompDirectiveError)) -ne 0 ]; then
        # Error code.  No completion.
        __kumactl_debug "Received error from custom completion go code"
        return
    else
        if [ $((directive & shellCompDirectiveNoSpace)) -ne 0 ]; then
            if [[ $(type -t compopt) = "builtin" ]]; then
                __kumactl_debug "Activating no space"
                compopt -o nospace
            else
                __kumactl_debug "No space directive not supported in this version of bash"
            fi
        fi
        if [ $((directive & shellCompDirectiveNoFileComp)) -ne 0 ]; then
            if [[ $(type -t compopt) = "builtin" ]]; then
                __kumactl_debug "Activating no file completion"
                compopt +o default
            else
                __kumactl_debug "No file completion directive not supported in this version of bash"
            fi
        fi
    fi

    if [ $((directive & shellCompDirectiveFilterFileExt)) -ne 0 ]; then
        # File extension filtering
        local fullFilter filter filteringCmd

        # Do not use quotes around the $out variable or else newline
        # characters will be kept.
        for filter in ${out[*]}; do
            fullFilter+="$filter|"
        done

        filteringCmd="_filedir $fullFilter"
        __kumactl_debug "File filtering command: $filteringCmd"
        $filteringCmd
    elif [ $((directive & shellCompDirectiveFilterDirs)) -ne 0 ]; then
        # File completion for directories only

        # Use printf to strip any trailing newline
        local subdir
        subdir=$(printf "%s" "${out[0]}")
        if [ -n "$subdir" ]; then
            __kumactl_debug "Listing directories in $subdir"
            pushd "$subdir" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1 || return
        else
            __kumactl_debug "Listing directories in ."
            _filedir -d
        fi
    else
        __kumactl_handle_standard_completion_case
    fi

    __kumactl_handle_special_char "$cur" :
    __kumactl_handle_special_char "$cur" =
}

__kumactl_handle_standard_completion_case() {
    local tab comp
    tab=$(printf '\t')

    local longest=0
    # Look for the longest completion so that we can format things nicely
    while IFS='' read -r comp; do
        # Strip any description before checking the length
        comp=${comp%%$tab*}
        # Only consider the completions that match
        comp=$(compgen -W "$comp" -- "$cur")
        if ((${#comp}>longest)); then
            longest=${#comp}
        fi
    done < <(printf "%s\n" "${out[@]}")

    local completions=()
    while IFS='' read -r comp; do
        if [ -z "$comp" ]; then
            continue
        fi

        __kumactl_debug "Original comp: $comp"
        comp="$(__kumactl_format_comp_descriptions "$comp" "$longest")"
        __kumactl_debug "Final comp: $comp"
        completions+=("$comp")
    done < <(printf "%s\n" "${out[@]}")

    while IFS='' read -r comp; do
        COMPREPLY+=("$comp")
    done < <(compgen -W "${completions[*]}" -- "$cur")

    # If there is a single completion left, remove the description text
    if [ ${#COMPREPLY[*]} -eq 1 ]; then
        __kumactl_debug "COMPREPLY[0]: ${COMPREPLY[0]}"
        comp="${COMPREPLY[0]%% *}"
        __kumactl_debug "Removed description from single completion, which is now: ${comp}"
        COMPREPLY=()
        COMPREPLY+=("$comp")
    fi
}

__kumactl_handle_special_char()
{
    local comp="$1"
    local char=$2
    if [[ "$comp" == *${char}* && "$COMP_WORDBREAKS" == *${char}* ]]; then
        local word=${comp%"${comp##*${char}}"}
        local idx=${#COMPREPLY[*]}
        while [[ $((--idx)) -ge 0 ]]; do
            COMPREPLY[$idx]=${COMPREPLY[$idx]#"$word"}
        done
    fi
}

__kumactl_format_comp_descriptions()
{
    local tab
    tab=$(printf '\t')
    local comp="$1"
    local longest=$2

    # Properly format the description string which follows a tab character if there is one
    if [[ "$comp" == *$tab* ]]; then
        desc=${comp#*$tab}
        comp=${comp%%$tab*}

        # $COLUMNS stores the current shell width.
        # Remove an extra 4 because we add 2 spaces and 2 parentheses.
        maxdesclength=$(( COLUMNS - longest - 4 ))

        # Make sure we can fit a description of at least 8 characters
        # if we are to align the descriptions.
        if [[ $maxdesclength -gt 8 ]]; then
            # Add the proper number of spaces to align the descriptions
            for ((i = ${#comp} ; i < longest ; i++)); do
                comp+=" "
            done
        else
            # Don't pad the descriptions so we can fit more text after the completion
            maxdesclength=$(( COLUMNS - ${#comp} - 4 ))
        fi

        # If there is enough space for any description text,
        # truncate the descriptions that are too long for the shell width
        if [ $maxdesclength -gt 0 ]; then
            if [ ${#desc} -gt $maxdesclength ]; then
                desc=${desc:0:$(( maxdesclength - 1 ))}
                desc+="â€¦"
            fi
            comp+="  ($desc)"
        fi
    fi
    __kumactl_handle_word
}

_kumactl_apply()
{
    last_command="kumactl_apply"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--file=")
    two_word_flags+=("--file")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--file")
    local_nonpersistent_flags+=("--file=")
    local_nonpersistent_flags+=("-f")
    flags+=("--var=")
    two_word_flags+=("--var")
    two_word_flags+=("-v")
    local_nonpersistent_flags+=("--var")
    local_nonpersistent_flags+=("--var=")
    local_nonpersistent_flags+=("-v")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--file=")
    must_have_one_flag+=("-f")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion_bash()
{
    last_command="kumactl_completion_bash"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--help")
    flags+=("-h")
    local_nonpersistent_flags+=("--help")
    local_nonpersistent_flags+=("-h")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion_fish()
{
    last_command="kumactl_completion_fish"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion_zsh()
{
    last_command="kumactl_completion_zsh"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion()
{
    last_command="kumactl_completion"

    command_aliases=()

    commands=()
    commands+=("bash")
    commands+=("fish")
    commands+=("zsh")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_add()
{
    last_command="kumactl_config_control-planes_add"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--address=")
    two_word_flags+=("--address")
    local_nonpersistent_flags+=("--address")
    local_nonpersistent_flags+=("--address=")
    flags+=("--ca-cert-file=")
    two_word_flags+=("--ca-cert-file")
    local_nonpersistent_flags+=("--ca-cert-file")
    local_nonpersistent_flags+=("--ca-cert-file=")
    flags+=("--client-cert-file=")
    two_word_flags+=("--client-cert-file")
    local_nonpersistent_flags+=("--client-cert-file")
    local_nonpersistent_flags+=("--client-cert-file=")
    flags+=("--client-key-file=")
    two_word_flags+=("--client-key-file")
    local_nonpersistent_flags+=("--client-key-file")
    local_nonpersistent_flags+=("--client-key-file=")
    flags+=("--headers=")
    two_word_flags+=("--headers")
    local_nonpersistent_flags+=("--headers")
    local_nonpersistent_flags+=("--headers=")
    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--overwrite")
    local_nonpersistent_flags+=("--overwrite")
    flags+=("--skip-verify")
    local_nonpersistent_flags+=("--skip-verify")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--address=")
    must_have_one_flag+=("--name=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_list()
{
    last_command="kumactl_config_control-planes_list"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_remove()
{
    last_command="kumactl_config_control-planes_remove"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--name=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_switch()
{
    last_command="kumactl_config_control-planes_switch"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--name=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes()
{
    last_command="kumactl_config_control-planes"

    command_aliases=()

    commands=()
    commands+=("add")
    commands+=("list")
    commands+=("remove")
    commands+=("switch")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_view()
{
    last_command="kumactl_config_view"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config()
{
    last_command="kumactl_config"

    command_aliases=()

    commands=()
    commands+=("control-planes")
    commands+=("view")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_delete()
{
    last_command="kumactl_delete"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_dataplane-token()
{
    last_command="kumactl_generate_dataplane-token"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--proxy-type=")
    two_word_flags+=("--proxy-type")
    local_nonpersistent_flags+=("--proxy-type")
    local_nonpersistent_flags+=("--proxy-type=")
    flags+=("--tag=")
    two_word_flags+=("--tag")
    local_nonpersistent_flags+=("--tag")
    local_nonpersistent_flags+=("--tag=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_tls-certificate()
{
    last_command="kumactl_generate_tls-certificate"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-file=")
    two_word_flags+=("--cert-file")
    local_nonpersistent_flags+=("--cert-file")
    local_nonpersistent_flags+=("--cert-file=")
    flags+=("--cp-hostname=")
    two_word_flags+=("--cp-hostname")
    local_nonpersistent_flags+=("--cp-hostname")
    local_nonpersistent_flags+=("--cp-hostname=")
    flags+=("--key-file=")
    two_word_flags+=("--key-file")
    local_nonpersistent_flags+=("--key-file")
    local_nonpersistent_flags+=("--key-file=")
    flags+=("--type=")
    two_word_flags+=("--type")
    local_nonpersistent_flags+=("--type")
    local_nonpersistent_flags+=("--type=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--type=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_zone-ingress-token()
{
    last_command="kumactl_generate_zone-ingress-token"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate()
{
    last_command="kumactl_generate"

    command_aliases=()

    commands=()
    commands+=("dataplane-token")
    commands+=("tls-certificate")
    commands+=("zone-ingress-token")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_circuit-breaker()
{
    last_command="kumactl_get_circuit-breaker"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_circuit-breakers()
{
    last_command="kumactl_get_circuit-breakers"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_dataplane()
{
    last_command="kumactl_get_dataplane"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_dataplanes()
{
    last_command="kumactl_get_dataplanes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_external-service()
{
    last_command="kumactl_get_external-service"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_external-services()
{
    last_command="kumactl_get_external-services"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_fault-injection()
{
    last_command="kumactl_get_fault-injection"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_fault-injections()
{
    last_command="kumactl_get_fault-injections"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_gateway()
{
    last_command="kumactl_get_gateway"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_gateways()
{
    last_command="kumactl_get_gateways"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_global-secret()
{
    last_command="kumactl_get_global-secret"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_global-secrets()
{
    last_command="kumactl_get_global-secrets"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_healthcheck()
{
    last_command="kumactl_get_healthcheck"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_healthchecks()
{
    last_command="kumactl_get_healthchecks"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_mesh()
{
    last_command="kumactl_get_mesh"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshes()
{
    last_command="kumactl_get_meshes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_proxytemplate()
{
    last_command="kumactl_get_proxytemplate"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_proxytemplates()
{
    last_command="kumactl_get_proxytemplates"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_rate-limit()
{
    last_command="kumactl_get_rate-limit"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_rate-limits()
{
    last_command="kumactl_get_rate-limits"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_retries()
{
    last_command="kumactl_get_retries"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_retry()
{
    last_command="kumactl_get_retry"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_secret()
{
    last_command="kumactl_get_secret"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_secrets()
{
    last_command="kumactl_get_secrets"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_timeout()
{
    last_command="kumactl_get_timeout"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_timeouts()
{
    last_command="kumactl_get_timeouts"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-log()
{
    last_command="kumactl_get_traffic-log"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-logs()
{
    last_command="kumactl_get_traffic-logs"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-permission()
{
    last_command="kumactl_get_traffic-permission"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-permissions()
{
    last_command="kumactl_get_traffic-permissions"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-route()
{
    last_command="kumactl_get_traffic-route"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-routes()
{
    last_command="kumactl_get_traffic-routes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-trace()
{
    last_command="kumactl_get_traffic-trace"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-traces()
{
    last_command="kumactl_get_traffic-traces"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zone()
{
    last_command="kumactl_get_zone"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zone-ingress()
{
    last_command="kumactl_get_zone-ingress"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zone-ingresses()
{
    last_command="kumactl_get_zone-ingresses"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zones()
{
    last_command="kumactl_get_zones"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get()
{
    last_command="kumactl_get"

    command_aliases=()

    commands=()
    commands+=("circuit-breaker")
    commands+=("circuit-breakers")
    commands+=("dataplane")
    commands+=("dataplanes")
    commands+=("external-service")
    commands+=("external-services")
    commands+=("fault-injection")
    commands+=("fault-injections")
    commands+=("gateway")
    commands+=("gateways")
    commands+=("global-secret")
    commands+=("global-secrets")
    commands+=("healthcheck")
    commands+=("healthchecks")
    commands+=("mesh")
    commands+=("meshes")
    commands+=("proxytemplate")
    commands+=("proxytemplates")
    commands+=("rate-limit")
    commands+=("rate-limits")
    commands+=("retries")
    commands+=("retry")
    commands+=("secret")
    commands+=("secrets")
    commands+=("timeout")
    commands+=("timeouts")
    commands+=("traffic-log")
    commands+=("traffic-logs")
    commands+=("traffic-permission")
    commands+=("traffic-permissions")
    commands+=("traffic-route")
    commands+=("traffic-routes")
    commands+=("traffic-trace")
    commands+=("traffic-traces")
    commands+=("zone")
    commands+=("zone-ingress")
    commands+=("zone-ingresses")
    commands+=("zones")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_help()
{
    last_command="kumactl_help"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    has_completion_function=1
    noun_aliases=()
}

_kumactl_inspect_dataplanes()
{
    last_command="kumactl_inspect_dataplanes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--gateway")
    flags+=("--ingress")
    flags+=("--tag=")
    two_word_flags+=("--tag")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_meshes()
{
    last_command="kumactl_inspect_meshes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_services()
{
    last_command="kumactl_inspect_services"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zone-ingresses()
{
    last_command="kumactl_inspect_zone-ingresses"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zones()
{
    last_command="kumactl_inspect_zones"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect()
{
    last_command="kumactl_inspect"

    command_aliases=()

    commands=()
    commands+=("dataplanes")
    commands+=("meshes")
    commands+=("services")
    commands+=("zone-ingresses")
    commands+=("zones")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_control-plane()
{
    last_command="kumactl_install_control-plane"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cni-bin-dir=")
    two_word_flags+=("--cni-bin-dir")
    local_nonpersistent_flags+=("--cni-bin-dir")
    local_nonpersistent_flags+=("--cni-bin-dir=")
    flags+=("--cni-chained")
    local_nonpersistent_flags+=("--cni-chained")
    flags+=("--cni-conf-name=")
    two_word_flags+=("--cni-conf-name")
    local_nonpersistent_flags+=("--cni-conf-name")
    local_nonpersistent_flags+=("--cni-conf-name=")
    flags+=("--cni-enabled")
    local_nonpersistent_flags+=("--cni-enabled")
    flags+=("--cni-net-dir=")
    two_word_flags+=("--cni-net-dir")
    local_nonpersistent_flags+=("--cni-net-dir")
    local_nonpersistent_flags+=("--cni-net-dir=")
    flags+=("--cni-registry=")
    two_word_flags+=("--cni-registry")
    local_nonpersistent_flags+=("--cni-registry")
    local_nonpersistent_flags+=("--cni-registry=")
    flags+=("--cni-repository=")
    two_word_flags+=("--cni-repository")
    local_nonpersistent_flags+=("--cni-repository")
    local_nonpersistent_flags+=("--cni-repository=")
    flags+=("--cni-version=")
    two_word_flags+=("--cni-version")
    local_nonpersistent_flags+=("--cni-version")
    local_nonpersistent_flags+=("--cni-version=")
    flags+=("--control-plane-registry=")
    two_word_flags+=("--control-plane-registry")
    local_nonpersistent_flags+=("--control-plane-registry")
    local_nonpersistent_flags+=("--control-plane-registry=")
    flags+=("--control-plane-repository=")
    two_word_flags+=("--control-plane-repository")
    local_nonpersistent_flags+=("--control-plane-repository")
    local_nonpersistent_flags+=("--control-plane-repository=")
    flags+=("--control-plane-service-name=")
    two_word_flags+=("--control-plane-service-name")
    local_nonpersistent_flags+=("--control-plane-service-name")
    local_nonpersistent_flags+=("--control-plane-service-name=")
    flags+=("--control-plane-version=")
    two_word_flags+=("--control-plane-version")
    local_nonpersistent_flags+=("--control-plane-version")
    local_nonpersistent_flags+=("--control-plane-version=")
    flags+=("--dataplane-init-registry=")
    two_word_flags+=("--dataplane-init-registry")
    local_nonpersistent_flags+=("--dataplane-init-registry")
    local_nonpersistent_flags+=("--dataplane-init-registry=")
    flags+=("--dataplane-init-repository=")
    two_word_flags+=("--dataplane-init-repository")
    local_nonpersistent_flags+=("--dataplane-init-repository")
    local_nonpersistent_flags+=("--dataplane-init-repository=")
    flags+=("--dataplane-init-version=")
    two_word_flags+=("--dataplane-init-version")
    local_nonpersistent_flags+=("--dataplane-init-version")
    local_nonpersistent_flags+=("--dataplane-init-version=")
    flags+=("--dataplane-registry=")
    two_word_flags+=("--dataplane-registry")
    local_nonpersistent_flags+=("--dataplane-registry")
    local_nonpersistent_flags+=("--dataplane-registry=")
    flags+=("--dataplane-repository=")
    two_word_flags+=("--dataplane-repository")
    local_nonpersistent_flags+=("--dataplane-repository")
    local_nonpersistent_flags+=("--dataplane-repository=")
    flags+=("--dataplane-version=")
    two_word_flags+=("--dataplane-version")
    local_nonpersistent_flags+=("--dataplane-version")
    local_nonpersistent_flags+=("--dataplane-version=")
    flags+=("--env-var=")
    two_word_flags+=("--env-var")
    local_nonpersistent_flags+=("--env-var")
    local_nonpersistent_flags+=("--env-var=")
    flags+=("--image-pull-policy=")
    two_word_flags+=("--image-pull-policy")
    local_nonpersistent_flags+=("--image-pull-policy")
    local_nonpersistent_flags+=("--image-pull-policy=")
    flags+=("--ingress-drain-time=")
    two_word_flags+=("--ingress-drain-time")
    local_nonpersistent_flags+=("--ingress-drain-time")
    local_nonpersistent_flags+=("--ingress-drain-time=")
    flags+=("--ingress-enabled")
    local_nonpersistent_flags+=("--ingress-enabled")
    flags+=("--ingress-use-node-port")
    local_nonpersistent_flags+=("--ingress-use-node-port")
    flags+=("--injector-failure-policy=")
    two_word_flags+=("--injector-failure-policy")
    local_nonpersistent_flags+=("--injector-failure-policy")
    local_nonpersistent_flags+=("--injector-failure-policy=")
    flags+=("--kds-global-address=")
    two_word_flags+=("--kds-global-address")
    local_nonpersistent_flags+=("--kds-global-address")
    local_nonpersistent_flags+=("--kds-global-address=")
    flags+=("--mode=")
    two_word_flags+=("--mode")
    local_nonpersistent_flags+=("--mode")
    local_nonpersistent_flags+=("--mode=")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--tls-api-server-client-certs-secret=")
    two_word_flags+=("--tls-api-server-client-certs-secret")
    local_nonpersistent_flags+=("--tls-api-server-client-certs-secret")
    local_nonpersistent_flags+=("--tls-api-server-client-certs-secret=")
    flags+=("--tls-api-server-secret=")
    two_word_flags+=("--tls-api-server-secret")
    local_nonpersistent_flags+=("--tls-api-server-secret")
    local_nonpersistent_flags+=("--tls-api-server-secret=")
    flags+=("--tls-general-ca-bundle=")
    two_word_flags+=("--tls-general-ca-bundle")
    local_nonpersistent_flags+=("--tls-general-ca-bundle")
    local_nonpersistent_flags+=("--tls-general-ca-bundle=")
    flags+=("--tls-general-secret=")
    two_word_flags+=("--tls-general-secret")
    local_nonpersistent_flags+=("--tls-general-secret")
    local_nonpersistent_flags+=("--tls-general-secret=")
    flags+=("--tls-kds-global-server-secret=")
    two_word_flags+=("--tls-kds-global-server-secret")
    local_nonpersistent_flags+=("--tls-kds-global-server-secret")
    local_nonpersistent_flags+=("--tls-kds-global-server-secret=")
    flags+=("--tls-kds-zone-client-secret=")
    two_word_flags+=("--tls-kds-zone-client-secret")
    local_nonpersistent_flags+=("--tls-kds-zone-client-secret")
    local_nonpersistent_flags+=("--tls-kds-zone-client-secret=")
    flags+=("--use-node-port")
    local_nonpersistent_flags+=("--use-node-port")
    flags+=("--without-kubernetes-connection")
    local_nonpersistent_flags+=("--without-kubernetes-connection")
    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_crds()
{
    last_command="kumactl_install_crds"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--only-missing")
    local_nonpersistent_flags+=("--only-missing")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_demo()
{
    last_command="kumactl_install_demo"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_dns()
{
    last_command="kumactl_install_dns"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--port=")
    two_word_flags+=("--port")
    local_nonpersistent_flags+=("--port")
    local_nonpersistent_flags+=("--port=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_gateway_kong()
{
    last_command="kumactl_install_gateway_kong"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_gateway_kong-enterprise()
{
    last_command="kumactl_install_gateway_kong-enterprise"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--license-path=")
    two_word_flags+=("--license-path")
    local_nonpersistent_flags+=("--license-path")
    local_nonpersistent_flags+=("--license-path=")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--license-path=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_gateway()
{
    last_command="kumactl_install_gateway"

    command_aliases=()

    commands=()
    commands+=("kong")
    commands+=("kong-enterprise")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_logging()
{
    last_command="kumactl_install_logging"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_metrics()
{
    last_command="kumactl_install_metrics"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--kuma-cp-address=")
    two_word_flags+=("--kuma-cp-address")
    local_nonpersistent_flags+=("--kuma-cp-address")
    local_nonpersistent_flags+=("--kuma-cp-address=")
    flags+=("--kuma-prometheus-sd-image=")
    two_word_flags+=("--kuma-prometheus-sd-image")
    local_nonpersistent_flags+=("--kuma-prometheus-sd-image")
    local_nonpersistent_flags+=("--kuma-prometheus-sd-image=")
    flags+=("--kuma-prometheus-sd-version=")
    two_word_flags+=("--kuma-prometheus-sd-version")
    local_nonpersistent_flags+=("--kuma-prometheus-sd-version")
    local_nonpersistent_flags+=("--kuma-prometheus-sd-version=")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--without-grafana")
    local_nonpersistent_flags+=("--without-grafana")
    flags+=("--without-prometheus")
    local_nonpersistent_flags+=("--without-prometheus")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_tracing()
{
    last_command="kumactl_install_tracing"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_transparent-proxy()
{
    last_command="kumactl_install_transparent-proxy"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--exclude-inbound-ports=")
    two_word_flags+=("--exclude-inbound-ports")
    local_nonpersistent_flags+=("--exclude-inbound-ports")
    local_nonpersistent_flags+=("--exclude-inbound-ports=")
    flags+=("--exclude-outbound-ports=")
    two_word_flags+=("--exclude-outbound-ports")
    local_nonpersistent_flags+=("--exclude-outbound-ports")
    local_nonpersistent_flags+=("--exclude-outbound-ports=")
    flags+=("--kuma-cp-ip=")
    two_word_flags+=("--kuma-cp-ip")
    local_nonpersistent_flags+=("--kuma-cp-ip")
    local_nonpersistent_flags+=("--kuma-cp-ip=")
    flags+=("--kuma-dp-uid=")
    two_word_flags+=("--kuma-dp-uid")
    local_nonpersistent_flags+=("--kuma-dp-uid")
    local_nonpersistent_flags+=("--kuma-dp-uid=")
    flags+=("--kuma-dp-user=")
    two_word_flags+=("--kuma-dp-user")
    local_nonpersistent_flags+=("--kuma-dp-user")
    local_nonpersistent_flags+=("--kuma-dp-user=")
    flags+=("--redirect-all-dns-traffic")
    local_nonpersistent_flags+=("--redirect-all-dns-traffic")
    flags+=("--redirect-dns")
    local_nonpersistent_flags+=("--redirect-dns")
    flags+=("--redirect-dns-port=")
    two_word_flags+=("--redirect-dns-port")
    local_nonpersistent_flags+=("--redirect-dns-port")
    local_nonpersistent_flags+=("--redirect-dns-port=")
    flags+=("--redirect-dns-upstream-target-chain=")
    two_word_flags+=("--redirect-dns-upstream-target-chain")
    local_nonpersistent_flags+=("--redirect-dns-upstream-target-chain")
    local_nonpersistent_flags+=("--redirect-dns-upstream-target-chain=")
    flags+=("--redirect-inbound")
    local_nonpersistent_flags+=("--redirect-inbound")
    flags+=("--redirect-inbound-port=")
    two_word_flags+=("--redirect-inbound-port")
    local_nonpersistent_flags+=("--redirect-inbound-port")
    local_nonpersistent_flags+=("--redirect-inbound-port=")
    flags+=("--redirect-inbound-port-v6=")
    two_word_flags+=("--redirect-inbound-port-v6")
    local_nonpersistent_flags+=("--redirect-inbound-port-v6")
    local_nonpersistent_flags+=("--redirect-inbound-port-v6=")
    flags+=("--redirect-outbound-port=")
    two_word_flags+=("--redirect-outbound-port")
    local_nonpersistent_flags+=("--redirect-outbound-port")
    local_nonpersistent_flags+=("--redirect-outbound-port=")
    flags+=("--skip-resolv-conf")
    local_nonpersistent_flags+=("--skip-resolv-conf")
    flags+=("--store-firewalld")
    local_nonpersistent_flags+=("--store-firewalld")
    flags+=("--verbose")
    local_nonpersistent_flags+=("--verbose")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install()
{
    last_command="kumactl_install"

    command_aliases=()

    commands=()
    commands+=("control-plane")
    commands+=("crds")
    commands+=("demo")
    commands+=("dns")
    commands+=("gateway")
    commands+=("logging")
    commands+=("metrics")
    commands+=("tracing")
    commands+=("transparent-proxy")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_uninstall_transparent-proxy()
{
    last_command="kumactl_uninstall_transparent-proxy"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--verbose")
    local_nonpersistent_flags+=("--verbose")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_uninstall()
{
    last_command="kumactl_uninstall"

    command_aliases=()

    commands=()
    commands+=("transparent-proxy")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_version()
{
    last_command="kumactl_version"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--detailed")
    flags+=("-a")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_root_command()
{
    last_command="kumactl"

    command_aliases=()

    commands=()
    commands+=("apply")
    commands+=("completion")
    commands+=("config")
    commands+=("delete")
    commands+=("generate")
    commands+=("get")
    commands+=("help")
    commands+=("inspect")
    commands+=("install")
    commands+=("uninstall")
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

__start_kumactl()
{
    local cur prev words cword split

    COMPREPLY=()

    # Call _init_completion from the bash-completion package
    # to prepare the arguments properly
    if declare -F _init_completion >/dev/null 2>&1; then
        _init_completion -n "=:" || return
    else
        __kumactl_init_completion -n "=:" || return
    fi

    __kumactl_debug
    __kumactl_debug "========= starting completion logic =========="
    __kumactl_debug "cur is ${cur}, words[*] is ${words[*]}, #words[@] is ${#words[@]}, cword is $cword"

    # The user could have moved the cursor backwards on the command-line.
    # We need to trigger completion from the $cword location, so we need
    # to truncate the command-line ($words) up to the $cword location.
    words=("${words[@]:0:$cword+1}")
    __kumactl_debug "Truncated words[*]: ${words[*]},"

    local out directive
    __kumactl_get_completion_results
    __kumactl_process_completion_results
}

if [[ $(type -t compopt) = "builtin" ]]; then
    complete -o default -F __start_kumactl kumactl
else
    complete -o default -o nospace -F __start_kumactl kumactl
fi

# ex: ts=4 sw=4 et filetype=sh
